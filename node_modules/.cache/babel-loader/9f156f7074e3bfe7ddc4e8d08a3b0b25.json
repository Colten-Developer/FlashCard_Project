{"ast":null,"code":"var _jsxFileName = \"D:\\\\colty\\\\Documents\\\\coding_projects\\\\Thinkful\\\\FrontEnd\\\\Project_Flashcards_Qualified_1\\\\src\\\\decks\\\\EditCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { updateCard, readCard, readDeck } from \"./../utils/api/index.js\"; //\n// Double-check if the handler gets enough time to process the data\n// Move the state up if needed\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditCard({\n  decks\n}) {\n  _s();\n\n  const history = useHistory();\n  const params = useParams();\n  const deckId = params.deckId;\n  const cardId = params.cardId;\n  console.log(params);\n  const [currentDeck, setCurrentDeck] = useState({});\n  const [currentDeckName, setCurrentDeckName] = useState('');\n  const [cardsList, setCardsList] = useState([]);\n  const [currentCard, setCurrentCard] = useState([]);\n\n  const fetchDeck = async () => {\n    let result = await readDeck(deckId);\n    let cardResult = await readCard(cardId);\n    setCurrentDeck(result);\n    setCurrentDeckName(result.name);\n    setCardsList(result.cards);\n    setCurrentCard(cardResult);\n  };\n\n  useEffect(() => {\n    fetchDeck();\n  }, [deckId]);\n  const initialFormState = {\n    front: currentCard.front,\n    back: currentCard.back,\n    id: currentCard.id\n  };\n  const [formData, setFormData] = useState({ ...initialFormState\n  });\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSave = event => {\n    event.preventDefault(); //console.log('-----------------------')\n    //console.log(formData)\n\n    updateCard(formData).then(resolved => history.push('/decks/3/cards/25/decks/3'));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container w-75\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \" Home \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 67\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `decks/${deckId}`,\n              children: [\" \", currentDeckName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 67\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: [\" \", `Edit Card ${cardId}`, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [currentDeckName, \": Add Card\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cardFront\",\n          className: \"form-group\",\n          children: \" Front \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"front\",\n          type: \"text\",\n          name: \"front\",\n          onChange: handleChange,\n          value: formData.front,\n          placeholder: \"Front side of card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cardBack\",\n          className: \"form-group\",\n          children: \" Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"back\",\n          type: \"text\",\n          name: \"back\",\n          onChange: handleChange,\n          value: formData.back,\n          placeholder: \"Back side of card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        type: \"button\",\n        className: \"btn btn-secondary mr-2\",\n        children: \" Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: handleSave,\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditCard, \"4wklnj1Ig0CwJX92ZFTor8WhXKs=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = EditCard;\nexport default EditCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditCard\");","map":{"version":3,"sources":["D:/colty/Documents/coding_projects/Thinkful/FrontEnd/Project_Flashcards_Qualified_1/src/decks/EditCard.js"],"names":["React","useState","useEffect","Link","useParams","useHistory","updateCard","readCard","readDeck","EditCard","decks","history","params","deckId","cardId","console","log","currentDeck","setCurrentDeck","currentDeckName","setCurrentDeckName","cardsList","setCardsList","currentCard","setCurrentCard","fetchDeck","result","cardResult","name","cards","initialFormState","front","back","id","formData","setFormData","handleChange","target","value","handleSave","event","preventDefault","then","resolved","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { updateCard, readCard, readDeck } from \"./../utils/api/index.js\";\n\n//\n// Double-check if the handler gets enough time to process the data\n// Move the state up if needed\n\nfunction EditCard ({ decks }) {\n\tconst history = useHistory();\n    const params = useParams();\n    const deckId = params.deckId;\n\tconst cardId = params.cardId;\n    console.log(params)\n\t\n\tconst [currentDeck, setCurrentDeck] = useState({});\n    const [currentDeckName, setCurrentDeckName] = useState('')\n    const [cardsList, setCardsList] = useState([])\n\tconst [currentCard, setCurrentCard] = useState([])\n\t\n\tconst fetchDeck = async () => {\n        let result = await readDeck(deckId)\n\t\tlet cardResult = await readCard(cardId)\n        setCurrentDeck(result)\n        setCurrentDeckName(result.name)\n        setCardsList(result.cards)\n\t\tsetCurrentCard(cardResult)\n    }\n\n    useEffect(() => {\n        fetchDeck()\n    }, [deckId])\n\n    const initialFormState = {\n\t\tfront: currentCard.front,\n\t\tback: currentCard.back,\n\t\tid: currentCard.id,\n      };\n\n    const [formData, setFormData] = useState({ ...initialFormState });\n    const handleChange = ({ target }) => {\n    setFormData({\n        ...formData,\n        [target.name]: target.value,\n    });\n    };\n\n    const handleSave = (event) => {\n    event.preventDefault();\n\t//console.log('-----------------------')\n\t//console.log(formData)\n    updateCard(formData).then(resolved => history.push('/decks/3/cards/25/decks/3'))\n    };\n\n    return (\n        <div className = \"container w-75\">\n            <div>\n                <nav aria-label = \"breadcrumb\">\n                    <ol className = \"breadcrumb\">\n                        <li className = \"breadcrumb-item active\"> <Link to = \"/\"> Home </Link> </li>\n                        <li className = \"breadcrumb-item active\"> <Link to = {`decks/${deckId}`}> {currentDeckName} </Link> </li>\n                        <li className = \"breadcrumb-item\"> {`Edit Card ${cardId}`} </li>\n                    </ol>\n                </nav>\n            </div>\n            <h1>{currentDeckName}: Add Card</h1>\n            <form onSubmit={handleSave}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"cardFront\" className = \"form-group\"> Front </label>\n                        <textarea\n                            className = \"form-control\"\n                            id=\"front\"\n                            type=\"text\"\n                            name=\"front\"\n                            onChange={handleChange}\n                            value={formData.front}\n                            placeholder=\"Front side of card\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"cardBack\" className = \"form-group\"> Back </label>\n                        <textarea\n                            className = \"form-control\"\n                            id=\"back\"\n                            type=\"text\"\n                            name=\"back\"\n                            onChange={handleChange}\n                            value={formData.back}\n                            placeholder=\"Back side of card\"/> \n                </div>\n                <Link to = {`/decks/${deckId}`} type = \"button\" className = \"btn btn-secondary mr-2\"> Cancel </Link>\n                <Link to = {`/decks/${deckId}`} type=\"submit\" className = \"btn btn-primary\" onClick={handleSave} > Submit </Link>\n            </form>\n        </div>\n    )\n}\n\nexport default EditCard;"]},"metadata":{},"sourceType":"module"}