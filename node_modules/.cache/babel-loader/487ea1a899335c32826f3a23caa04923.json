{"ast":null,"code":"var _jsxFileName = \"D:\\\\colty\\\\Documents\\\\coding_projects\\\\Thinkful\\\\FrontEnd\\\\Project_Flashcards_Qualified_1\\\\src\\\\decks\\\\EditDeck.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { createCard, updateDeck, readDeck } from \"./../utils/api/index.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditDeck({\n  decks\n}) {\n  _s();\n\n  const params = useParams();\n  const deckId = params.deckId;\n  const [currentDeck, setCurrentDeck] = useState({});\n  const [deckName, setCurrentDeckName] = useState('');\n\n  const fetchDeck = async () => {\n    let result = await readDeck(deckId);\n    setCurrentDeck(result);\n    setCurrentDeckName(result.name);\n  };\n\n  useEffect(() => {\n    fetchDeck();\n  }, [deckId]);\n  console.log(decks);\n  const initialFormState = decks.filter(deck => deck.id == deckId)[0];\n  const [formData, setFormData] = useState({ ...initialFormState\n  });\n\n  const handleChange = ({\n    target\n  }) => {\n    setFormData({ ...formData,\n      [target.name]: target.value\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    updateDeck(formData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container w-75\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        \"aria-label\": \"breadcrumb\",\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: \"breadcrumb\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \" Home \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 67\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item active\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n              to: `/decks/${deckId}`,\n              children: [\" \", deckName, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 67\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"breadcrumb-item\",\n            children: \" Edit Deck \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-group\",\n          children: \" Name \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-control\",\n          id: \"name\",\n          type: \"text\",\n          name: \"name\",\n          onChange: handleChange,\n          value: formData.name,\n          placeholder: \"Deck Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          className: \"form-group\",\n          children: \" Description \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          id: \"description\",\n          type: \"text\",\n          name: \"description\",\n          onChange: handleChange,\n          value: formData.description,\n          placeholder: \"Brief description of the deck\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/decks/${deckId}`,\n        type: \"button\",\n        className: \"btn btn-secondary mr-2\",\n        children: \" Cancel \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditDeck, \"fbvJvijhBeeGWtqtJfIcGRd53Yk=\", false, function () {\n  return [useParams];\n});\n\n_c = EditDeck;\nexport default EditDeck;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDeck\");","map":{"version":3,"sources":["D:/colty/Documents/coding_projects/Thinkful/FrontEnd/Project_Flashcards_Qualified_1/src/decks/EditDeck.js"],"names":["React","useState","useEffect","useParams","Link","createCard","updateDeck","readDeck","EditDeck","decks","params","deckId","currentDeck","setCurrentDeck","deckName","setCurrentDeckName","fetchDeck","result","name","console","log","initialFormState","filter","deck","id","formData","setFormData","handleChange","target","value","handleSubmit","event","preventDefault","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { createCard, updateDeck, readDeck } from \"./../utils/api/index.js\";\n\nfunction EditDeck({decks}) {\n    const params = useParams();\n    const deckId = params.deckId;\n\t\n\tconst [currentDeck, setCurrentDeck] = useState({});\n    const [deckName, setCurrentDeckName] = useState('')\n\t\n\t\n\tconst fetchDeck = async () => {\n        let result = await readDeck(deckId)\n        setCurrentDeck(result)\n        setCurrentDeckName(result.name)\n    }\n\n    useEffect(() => {\n        fetchDeck()\n    }, [deckId])\n    \n    console.log(decks)\n\t\n    const initialFormState = decks.filter((deck) => deck.id == deckId)[0];\n    const [formData, setFormData] = useState({ ...initialFormState });\n    const handleChange = ({ target }) => {\n    setFormData({\n        ...formData,\n        [target.name]: target.value,\n    });\n    };\n    \n    const handleSubmit = (event) => {\n        event.preventDefault();\n\t\tupdateDeck(formData)\n    };\n\n    return (\n        <div className = \"container w-75\">\n            <div>\n                <nav aria-label = \"breadcrumb\">\n                    <ol className = \"breadcrumb\">\n                        <li className = \"breadcrumb-item active\"> <Link to = \"/\"> Home </Link> </li>\n                        <li className = \"breadcrumb-item active\"> <Link to = {`/decks/${deckId}`}> {deckName} </Link> </li>\n                        <li className = \"breadcrumb-item\"> Edit Deck </li>\n                    </ol>\n                </nav>\n            </div>\n            <h1>Edit Deck</h1>\n            <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\" className = \"form-group\"> Name </label>\n                        <input\n                            className = \"form-control\"\n                            id=\"name\"\n                            type=\"text\"\n                            name=\"name\"\n                            onChange={handleChange}\n                            value={formData.name}\n                            placeholder=\"Deck Name\"/>\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"description\" className = \"form-group\"> Description </label>\n                        <textarea\n                            className = \"form-control\"\n                            id=\"description\"\n                            type=\"text\"\n                            name=\"description\"\n                            onChange={handleChange}\n                            value={formData.description}\n                            placeholder=\"Brief description of the deck\"/> \n                </div>\n                <Link to = {`/decks/${deckId}`} type = \"button\" className = \"btn btn-secondary mr-2\"> Cancel </Link>\n                <button type=\"submit\" className = \"btn btn-primary\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default EditDeck;"]},"metadata":{},"sourceType":"module"}