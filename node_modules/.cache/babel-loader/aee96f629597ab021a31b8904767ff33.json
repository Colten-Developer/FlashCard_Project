{"ast":null,"code":"var _jsxFileName = \"D:\\\\colty\\\\Documents\\\\coding_projects\\\\Thinkful\\\\FrontEnd\\\\Project_Flashcards_Qualified_1\\\\src\\\\Layout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, useParams, Link, useRouteMatch, NavLink } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomePage from \"./../decks/HomePage\";\nimport Study from \"./../decks/Study\";\nimport ViewDeck from \"./../decks/ViewDeck\";\nimport CreateDeck from \"./../decks/CreateDeck\";\nimport EditDeck from \"./../decks/EditDeck\";\nimport CreateCard from \"./../decks/CreateCard\";\nimport EditCard from \"./../decks/EditCard\";\nimport { listCards, listDecks } from \"./../utils/api/index.js\";\nimport NoMatch from \"./../decks/NoMatch\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Layout() {\n  _s();\n\n  const params = useParams(); //const jsonData = require(\"./../data/db.json\");\n  //const [decks,setDecks] = useState(jsonData.decks);\n  //console.log(jsonData)\n  //const [cards,setCards] = useState(jsonData.cards);\n  //const API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n  // try to get rid of useEffect\n\n  const [decks, setDecks] = useState();\n  useEffect(() => {\n    async function loadDecks() {\n      const getDecks = await listDecks();\n\n      if (Array.isArray(getDecks)) {\n        setDecks(getDecks);\n      } else if (Array.isArray(getDecks) === false) {\n        setDecks([getDecks]);\n      } else {\n        setDecks(getDecks);\n        getDecks.map(async deck => {\n          const getCards = await listCards(deck.id);\n          deck[\"cards\"] = getCards;\n        });\n      }\n    }\n\n    loadDecks();\n  }, []);\n\n  if (decks == undefined) {\n    return \"Not Found\";\n  } else {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(HomePage, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: '/decks/:deckId/study',\n          children: /*#__PURE__*/_jsxDEV(Study, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: '/decks/new',\n          children: /*#__PURE__*/_jsxDEV(CreateDeck, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: '/decks/:deckId/cards/:cardId/edit',\n          children: /*#__PURE__*/_jsxDEV(EditCard, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: '/decks/:deckId/cards/new',\n          children: /*#__PURE__*/_jsxDEV(CreateCard, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: '/decks/:deckId/edit',\n          children: /*#__PURE__*/_jsxDEV(EditDeck, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: '/decks/:deckId',\n          children: /*#__PURE__*/_jsxDEV(ViewDeck, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: /*#__PURE__*/_jsxDEV(NotFound, {\n            decks: decks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Layout, \"sk3ZCshi43ZweKX2UwSgKliFX6k=\", false, function () {\n  return [useParams];\n});\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["D:/colty/Documents/coding_projects/Thinkful/FrontEnd/Project_Flashcards_Qualified_1/src/Layout/index.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","useParams","Link","useRouteMatch","NavLink","Header","HomePage","Study","ViewDeck","CreateDeck","EditDeck","CreateCard","EditCard","listCards","listDecks","NoMatch","NotFound","Layout","params","decks","setDecks","loadDecks","getDecks","Array","isArray","map","deck","getCards","id","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router,\nRoute,\nSwitch,\nuseParams,\nLink,\nuseRouteMatch,\nNavLink} from \"react-router-dom\";\nimport Header from \"./Header\";\nimport HomePage from \"./../decks/HomePage\";\nimport Study from \"./../decks/Study\";\nimport ViewDeck from \"./../decks/ViewDeck\";\nimport CreateDeck from \"./../decks/CreateDeck\";\nimport EditDeck from \"./../decks/EditDeck\";\nimport CreateCard from \"./../decks/CreateCard\";\nimport EditCard from \"./../decks/EditCard\";\nimport {listCards,listDecks} from \"./../utils/api/index.js\";\nimport NoMatch from \"./../decks/NoMatch\";\nimport NotFound from \"./NotFound\"\n\nfunction Layout() {\n  const params = useParams();\n  //const jsonData = require(\"./../data/db.json\");\n  //const [decks,setDecks] = useState(jsonData.decks);\n  //console.log(jsonData)\n  //const [cards,setCards] = useState(jsonData.cards);\n  //const API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n  // try to get rid of useEffect\n  const [decks,setDecks] = useState();\n  useEffect( () => {\n    async function loadDecks () {\n\n      const getDecks = await (listDecks())\n      if (Array.isArray(getDecks)) {\n        setDecks(getDecks)\n\n      } else if (Array.isArray(getDecks) === false) {\n        setDecks([getDecks])\n\n      } else {\n\n        setDecks(getDecks)\n        getDecks.map( async (deck) => {\n          const getCards = await listCards(deck.id);\n          deck[\"cards\"] = getCards;\n        })\n      }}\n    loadDecks();\n  },[])\n\n\n\n  if (decks == undefined) {\n    return (\n    \"Not Found\"\n    )\n  } else {\n    return (\n      <Router>\n        <Route>\n          <Header />\n        </Route>\n        <Switch>\n\t\t\t<Route exact={true} path=\"/\">\n\t\t\t\t<HomePage decks={decks} /> \n\t\t\t</Route> \n\t\t\t<Route path={'/decks/:deckId/study'}> \n\t\t\t\t<Study decks={decks} /> \n\t\t\t</Route>\n\t\t\t<Route path={'/decks/new'}> \n\t\t\t\t<CreateDeck decks={decks} /> \n\t\t\t</Route> \n\t\t\t<Route path={'/decks/:deckId/cards/:cardId/edit'}>\n\t\t\t\t<EditCard decks={decks} /> \n\t\t\t</Route>\n\t\t\t<Route path={'/decks/:deckId/cards/new'}>\n\t\t\t\t<CreateCard decks={decks} /> \n\t\t\t</Route> \n\t\t\t<Route path={'/decks/:deckId/edit'}> \n\t\t\t\t<EditDeck decks={decks} />\n\t\t\t</Route> \n\t\t\t<Route path={'/decks/:deckId'}>\n\t\t\t\t<ViewDeck decks={decks} /> \n\t\t\t</Route>\n\t\t\t<Route> \n\t\t\t\t<NotFound decks={decks} /> \n\t\t\t</Route>\n        </Switch>\n      </Router>\n    )\n  }\n\n}\n\nexport default Layout;\n\n"]},"metadata":{},"sourceType":"module"}